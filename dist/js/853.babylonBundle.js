(self.webpackChunkbabylonjs_typescript_webpack_simple_scene=self.webpackChunkbabylonjs_typescript_webpack_simple_scene||[]).push([[853,50,113],{9754:(e,t,i)=>{"use strict";i.r(t),i.d(t,{FFT:()=>r});var n=i(1146),a=i(8220),r=function(){function e(e,t,i,r,s){this._engine=e,this._rttDebug=i,this._debugFirstIndex=r,this._size=s;var p=new n.UJu("computeTwiddleFactors",this._engine,{computeSource:"let PI: f32 = 3.1415926;\r\n\r\n[[group(0), binding(0)]] var PrecomputeBuffer : texture_storage_2d<rgba32float, write>;\r\n\r\n[[block]] struct Params {\r\n    PingPong: u32;\r\n    Step : u32;\r\n    Size : i32;\r\n};\r\n\r\n[[group(0), binding(1)]] var<uniform> params : Params;\r\n\r\nfn complexMult(a: vec2<f32>, b: vec2<f32>) -> vec2<f32>\r\n{\r\n\treturn vec2<f32>(a.r * b.r - a.g * b.g, a.r * b.g + a.g * b.r);\r\n}\r\n\r\nfn complexExp(a: vec2<f32>) -> vec2<f32>\r\n{\r\n\treturn vec2<f32>(cos(a.y), sin(a.y)) * exp(a.x);\r\n}\r\n\r\n[[stage(compute), workgroup_size(1,8,1)]]\r\nfn precomputeTwiddleFactorsAndInputIndices([[builtin(global_invocation_id)]] id : vec3<u32>)\r\n{\r\n    let iid = vec3<i32>(id);\r\n\tlet b = params.Size >> (id.x + 1u);\r\n\tlet mult = 2.0 * PI * vec2<f32>(0.0, -1.0) / f32(params.Size);\r\n\tlet i = (2 * b * (iid.y / b) + (iid.y % b)) % params.Size;\r\n\tlet twiddle = complexExp(mult * vec2<f32>(f32((iid.y / b) * b)));\r\n\t\r\n    textureStore(PrecomputeBuffer, iid.xy, vec4<f32>(twiddle.x, twiddle.y, f32(i), f32(i + b)));\r\n\ttextureStore(PrecomputeBuffer, vec2<i32>(iid.x, iid.y + params.Size / 2), vec4<f32>(-twiddle.x, -twiddle.y, f32(i), f32(i + b)));\r\n}\r\n"},{bindingsMapping:{PrecomputeBuffer:{group:0,binding:0},params:{group:0,binding:1}},entryPoint:"precomputeTwiddleFactorsAndInputIndices"}),o=0|Math.log2(s);this._precomputedData=a.ComputeHelper.CreateStorageTexture("precomputeTwiddle",this._engine,o,this._size,n.gTE.TEXTUREFORMAT_RGBA),this._rttDebug.setTexture(this._debugFirstIndex,"precomputeTwiddle",this._precomputedData),this._params=new n.Ms4(this._engine),this._params.addUniform("PingPong",1),this._params.addUniform("Step",1),this._params.addUniform("Size",1),p.setStorageTexture("PrecomputeBuffer",this._precomputedData),p.setUniformBuffer("params",this._params),this._params.updateInt("Size",this._size),this._params.update(),a.ComputeHelper.Dispatch(p,o,s/2,1)}return e.prototype.dispose=function(){this._precomputedData.dispose(),this._params.dispose()},e}()},8050:(e,t,i)=>{"use strict";i.r(t),i.d(t,{WavesCascade:()=>s});var n=i(1146),a=i(494),r=i(8220),s=function(){function e(e,t,i,s,p){this._engine=p,this._size=e,this._initialSpectrum=new a.InitialSpectrum(p,i,s,e,t),this._timeDependentSpectrum=new n.UJu("timeDependentSpectrumCS",this._engine,{computeSource:"[[group(0), binding(0)]] var H0Sampler : sampler;\r\n[[group(0), binding(1)]] var H0 : texture_2d<f32>;\r\n[[group(0), binding(2)]] var WavesDataSampler : sampler;\r\n[[group(0), binding(3)]] var WavesData : texture_2d<f32>;\r\n\r\n[[block]] struct Params {\r\n    Time : f32;\r\n};\r\n\r\n[[group(0), binding(4)]] var<uniform> params : Params;\r\n\r\n[[group(0), binding(5)]] var DxDz_DyDxz : texture_storage_2d<rgba32float, write>;\r\n[[group(0), binding(6)]] var DyxDyz_DxxDzz : texture_storage_2d<rgba32float, write>;\r\n\r\nfn complexMult(a: vec2<f32>, b: vec2<f32>) -> vec2<f32>\r\n{\r\n\treturn vec2<f32>(a.r * b.r - a.g * b.g, a.r * b.g + a.g * b.r);\r\n}\r\n\r\n[[stage(compute), workgroup_size(8,8,1)]]\r\nfn calculateAmplitudes([[builtin(global_invocation_id)]] id : vec3<u32>)\r\n{\r\n    ignore(H0Sampler);\r\n    ignore(WavesDataSampler);\r\n\r\n    let iid = vec3<i32>(id);\r\n\tlet wave = textureLoad(WavesData, iid.xy, 0);\r\n\tlet phase = wave.w * params.Time;\r\n\tlet exponent = vec2<f32>(cos(phase), sin(phase));\r\n    let h0 = textureLoad(H0, iid.xy, 0);\r\n\tlet h = complexMult(h0.xy, exponent) + complexMult(h0.zw, vec2<f32>(exponent.x, -exponent.y));\r\n\tlet ih = vec2<f32>(-h.y, h.x);\r\n\t\r\n\tlet displacementX = ih * wave.x * wave.y;\r\n\tlet displacementY = h;\r\n\tlet displacementZ = ih * wave.z * wave.y;\r\n\t\t \r\n\tlet displacementX_dx = -h * wave.x * wave.x * wave.y;\r\n\tlet displacementY_dx = ih * wave.x;\r\n\tlet displacementZ_dx = -h * wave.x * wave.z * wave.y;\r\n\t\t \r\n\tlet displacementY_dz = ih * wave.z;\r\n\tlet displacementZ_dz = -h * wave.z * wave.z * wave.y;\r\n\t\r\n\ttextureStore(DxDz_DyDxz, iid.xy,   vec4<f32>(displacementX.x - displacementZ.y, displacementX.y + displacementZ.x, displacementY.x - displacementZ_dx.y, displacementY.y + displacementZ_dx.x));\r\n\ttextureStore(DyxDyz_DxxDzz, iid.xy, vec4<f32>(displacementY_dx.x - displacementY_dz.y, displacementY_dx.y + displacementY_dz.x, displacementX_dx.x - displacementZ_dz.y, displacementX_dx.y + displacementZ_dz.x));\r\n}\r\n"},{bindingsMapping:{H0:{group:0,binding:1},WavesData:{group:0,binding:3},params:{group:0,binding:4},DxDz_DyDxz:{group:0,binding:5},DyxDyz_DxxDzz:{group:0,binding:6}},entryPoint:"calculateAmplitudes"}),this._DxDz_DyDxz=r.ComputeHelper.CreateStorageTexture("DxDz_DyDxz",this._engine,this._size,this._size,n.gTE.TEXTUREFORMAT_RGBA),this._DyxDyz_DxxDzz=r.ComputeHelper.CreateStorageTexture("DyxDyz_DxxDzz",this._engine,this._size,this._size,n.gTE.TEXTUREFORMAT_RGBA),this._params=new n.Ms4(this._engine),this._params.addUniform("Time",1),this._timeDependentSpectrum.setTexture("H0",this._initialSpectrum.initialSpectrum),this._timeDependentSpectrum.setTexture("WavesData",this._initialSpectrum.wavesData),this._timeDependentSpectrum.setUniformBuffer("params",this._params),this._timeDependentSpectrum.setStorageTexture("DxDz_DyDxz",this._DxDz_DyDxz),this._timeDependentSpectrum.setStorageTexture("DyxDyz_DxxDzz",this._DyxDyz_DxxDzz),i.setTexture(s+3,"DxDz / DyDxz",this._DxDz_DyDxz,1e3),i.setTexture(s+4,"DyxDyz / DxxDzz",this._DyxDyz_DxxDzz,1e3)}return e.prototype.calculateInitials=function(e,t,i,n){this._initialSpectrum.generate(e,t,i,n)},e.prototype.calculateWavesAtTime=function(e){this._params.updateFloat("Time",e),this._params.update(),r.ComputeHelper.Dispatch(this._timeDependentSpectrum,this._size,this._size,1)},e.prototype.dispose=function(){this._initialSpectrum.dispose(),this._DxDz_DyDxz.dispose(),this._DyxDyz_DxxDzz.dispose()},e}()},6853:(e,t,i)=>{"use strict";i.r(t),i.d(t,{WavesGenerator:()=>p});var n=i(1146),a=i(9754),r=i(8050),s=i(6113),p=function(){function e(e,t,i){this._engine=t.getEngine(),this._size=e,this._rttDebug=i,this._startTime=(new Date).getTime()/1e3,this._fft=new a.FFT(t.getEngine(),t,this._rttDebug,1,e),this._noise=this._generateNoiseTexture(e),this._rttDebug.setTexture(0,"noise",this._noise),this.lengthScale=[250],this.wavesSettings=new s.WavesSettings,this._cascades=[new r.WavesCascade(e,this._noise,this._rttDebug,2,this._engine)],this.initializeCascades()}return e.prototype.initializeCascades=function(){for(var e=1e-4,t=0;t<this.lengthScale.length;++t){var i=t<this.lengthScale.length-1?2*Math.PI/this.lengthScale[t+1]*6:9999;this._cascades[t].calculateInitials(this.wavesSettings,this.lengthScale[t],e,i),e=i}},e.prototype.update=function(){for(var e=(new Date).getTime()/1e3-this._startTime,t=0;t<this._cascades.length;++t)this._cascades[t].calculateWavesAtTime(e)},e.prototype.dispose=function(){for(var e=0;e<this._cascades.length;++e)this._cascades[e].dispose();this._noise.dispose(),this._fft.dispose()},e.prototype._normalRandom=function(){return Math.cos(2*Math.PI*Math.random())*Math.sqrt(-2*Math.log(Math.random()))},e.prototype._generateNoiseTexture=function(e){for(var t=new Float32Array(e*e*4),i=0;i<e;++i)for(var a=0;a<e;++a)t[a*e*2+2*i+0]=this._normalRandom(),t[a*e*2+2*i+1]=this._normalRandom();var r=new n.lMF(t,e,e,n.gTE.TEXTUREFORMAT_RG,this._engine,!1,!1,n.gTE.TEXTURE_NEAREST_SAMPLINGMODE,n.gTE.TEXTURETYPE_FLOAT);return r.name="noise",r},e}()},6113:(e,t,i)=>{"use strict";i.r(t),i.d(t,{WavesSettings:()=>a});var n=i(1146),a=function(){function e(){this.g=9.81,this.depth=500,this.lambda=1,this.local={scale:1,windSpeed:.5,windDirection:-29.81,fetch:1e5,spreadBlend:1,swell:.198,peakEnhancement:3.3,shortWavesFade:.01},this.swell={scale:0,windSpeed:1,windDirection:0,fetch:3e5,spreadBlend:1,swell:1,peakEnhancement:3.3,shortWavesFade:.01},this.spectrums=[{scale:0,angle:0,spreadBlend:0,swell:0,alpha:0,peakOmega:0,gamma:0,shortWavesFade:0},{scale:0,angle:0,spreadBlend:0,swell:0,alpha:0,peakOmega:0,gamma:0,shortWavesFade:0}]}return e.prototype.setParametersToShader=function(e,t){e.updateFloat("GravityAcceleration",this.g),e.updateFloat("Depth",this.depth),this._fillSettingsStruct(this.local,this.spectrums[0]),this._fillSettingsStruct(this.swell,this.spectrums[1]);var i=[];this._linearizeSpectrumSetting(this.spectrums[0],i),this._linearizeSpectrumSetting(this.spectrums[1],i),t.update(i)},e.prototype._linearizeSpectrumSetting=function(e,t){t.push(e.scale,e.angle,e.spreadBlend,e.swell,e.alpha,e.peakOmega,e.gamma,e.shortWavesFade)},e.prototype._fillSettingsStruct=function(e,t){t.scale=e.scale,t.angle=e.windDirection/180*Math.PI,t.spreadBlend=e.spreadBlend,t.swell=n.Rus.Clamp(e.swell,.01,1),t.alpha=this._JonswapAlpha(this.g,e.fetch,e.windSpeed),t.peakOmega=this._JonswapPeakFrequency(this.g,e.fetch,e.windSpeed),t.gamma=e.peakEnhancement,t.shortWavesFade=e.shortWavesFade},e.prototype._JonswapAlpha=function(e,t,i){return.076*Math.pow(e*t/i/i,-.22)},e.prototype._JonswapPeakFrequency=function(e,t,i){return 22*Math.pow(i*t/e/e,-.33)},e}()}}]);
//# sourceMappingURL=853.babylonBundle.js.map
"use strict";(self.webpackChunkbabylonjs_ocean_demo=self.webpackChunkbabylonjs_ocean_demo||[]).push([[955],{3955:(t,e,i)=>{i.r(e),i.d(e,{OceanGeometry:()=>r});var s,a=i(6925);!function(t){t[t.None=0]="None",t[t.Left=1]="Left",t[t.Right=2]="Right",t[t.Top=4]="Top",t[t.Bottom=8]="Bottom",t[t.All=15]="All"}(s||(s={}));class r{constructor(t,e,i){this.lengthScale=15,this.vertexDensity=30,this.clipLevels=8,this.skirtSize=10,this.noMaterialLod=!0,this.useSkirt=!0,this._oceanMaterial=t,this._camera=e,this._scene=i,this._materials=[],this._root=new a.TransformNode("Ocean",i),this._center=null,this._skirt=null,this._rings=[],this._trims=[],this._trimRotations=[a.Quaternion.RotationAxis(a.Vector3.UpReadOnly,a.Angle.FromDegrees(180).radians()),a.Quaternion.RotationAxis(a.Vector3.UpReadOnly,a.Angle.FromDegrees(90).radians()),a.Quaternion.RotationAxis(a.Vector3.UpReadOnly,a.Angle.FromDegrees(270).radians()),a.Quaternion.Identity()]}get wireframe(){return this._center.material.wireframe}set wireframe(t){this._center.material.wireframe=t,this._skirt&&(this._skirt.material.wireframe=t),this._rings.forEach((e=>e.material.wireframe=t)),this._trims.forEach((e=>e.material.wireframe=t))}async initializeMaterials(){var t,e,i;null===(t=this._materials[0])||void 0===t||t.dispose(),null===(e=this._materials[1])||void 0===e||e.dispose(),null===(i=this._materials[2])||void 0===i||i.dispose(),this._materials=[await this._oceanMaterial.getMaterial(!0,!0),await this._oceanMaterial.getMaterial(!0,!1),await this._oceanMaterial.getMaterial(!1,!1)]}initializeMeshes(){var t,e,i,s;null===(t=this._center)||void 0===t||t.dispose(),null===(e=this._skirt)||void 0===e||e.dispose(),null===(i=this._rings)||void 0===i||i.forEach((t=>t.dispose())),null===(s=this._trims)||void 0===s||s.forEach((t=>t.dispose())),this._skirt=null,this._rings=[],this._trims=[],this._instantiateMeshes()}update(){this._updatePositions(),this._updateMaterials()}getMaterial(t){return this._materials[t]}_updateMaterials(){const t=this._activeLodLevels;this._center.material=this._getMaterial(this.noMaterialLod?0:this.clipLevels-t-1);for(let e=0;e<this._rings.length;e++)this._rings[e].material=this._getMaterial(this.noMaterialLod?0:this.clipLevels-t-e),this._trims[e].material=this._getMaterial(this.noMaterialLod?0:this.clipLevels-t-e);this.useSkirt&&(this._skirt.material=this.noMaterialLod?this._materials[0]:this._materials[2])}_updatePositions(){const t=this._gridSize,e=this._activeLodLevels,i=a.TmpVectors.Vector3[0],s=a.TmpVectors.Vector3[1],r=a.TmpVectors.Vector3[2],o=a.TmpVectors.Vector3[3];let n=this._clipLevelScale(-1,e);i.copyFrom(this._camera.position),this._snap(i,2*n),this._offsetFromCenter(-1,e,s),this._center.position.copyFrom(i).addInPlace(s),this._center.scaling.set(n,1,n);for(let a=0;a<this.clipLevels;a++){if(this._rings[a].setEnabled(a<e),this._trims[a].setEnabled(a<e),a>=e)continue;n=this._clipLevelScale(a,e),r.copyFrom(this._camera.position),this._snap(r,2*n),this._offsetFromCenter(a,e,s),o.copyFrom(r).addInPlace(s).addInPlaceFromFloats(n*(t-1)/2,0,n*(t-1)/2);const l=i.x-r.x<=0?1:0,h=i.z-r.z<=0?1:0;o.x+=l*(t+1)*n,o.z+=h*(t+1)*n,this._trims[a].position.copyFrom(o),this._trims[a].rotationQuaternion.copyFrom(this._trimRotations[l+2*h]),this._trims[a].scaling.set(n,1,n),this._rings[a].position.copyFrom(r).addInPlace(s),this._rings[a].scaling.set(n,1,n),i.copyFrom(r)}this.useSkirt&&(n=2*this.lengthScale*Math.pow(2,this.clipLevels),this._skirt.position.copyFrom(i).addInPlaceFromFloats(-n*(this.skirtSize+.5-.5/t),0,-n*(this.skirtSize+.5-.5/t)),this._skirt.scaling.set(n,1,n))}get _activeLodLevels(){return this.clipLevels-a.Scalar.Clamp(Math.floor(Math.log2((1.7*Math.abs(this._camera.position.y)+1)/this.lengthScale)),0,this.clipLevels)}_clipLevelScale(t,e){return this.lengthScale/this._gridSize*Math.pow(2,this.clipLevels-e+t+1)}_offsetFromCenter(t,e,i){const s=this._gridSize,a=((1<<this.clipLevels)+r._GeometricProgressionSum(2,2,this.clipLevels-e+t+1,this.clipLevels-1))*this.lengthScale/s*(s-1)/2;i.copyFromFloats(-a,0,-a)}static _GeometricProgressionSum(t,e,i,s){return t/(1-e)*(Math.pow(e,s)-Math.pow(e,i))}_snap(t,e){t.x>=0?t.x=Math.floor(t.x/e)*e:t.x=Math.ceil((t.x-e+1)/e)*e,t.z<0?t.z=Math.floor(t.z/e)*e:t.z=Math.ceil((t.z-e+1)/e)*e,t.y=0}_getMaterial(t){return t-2<=0?this._materials[0]:t-2<=2?this._materials[1]:this._materials[2]}get _gridSize(){return 4*this.vertexDensity+1}_instantiateMeshes(){const t=this._gridSize;this._center=this._instantiateElement("Center",this._createPlaneMesh(2*t,2*t,1,s.All),this._materials[this._materials.length-1]);const e=this._createRingMesh(t,1),i=this._createTrimMesh(t,1);for(let t=0;t<this.clipLevels;++t)this._rings.push(this._instantiateElement("Ring "+t,e,this._materials[this._materials.length-1],t>0)),this._trims.push(this._instantiateElement("Trim "+t,i,this._materials[this._materials.length-1],t>0));this.useSkirt&&(this._skirt=this._instantiateElement("Skirt",this._createSkirtMesh(t,this.skirtSize),this._materials[this._materials.length-1]))}_instantiateElement(t,e,i,s=!1){return s&&(e=e.clone("")),e.name=t,e.material=i,e.parent=this._root,e.receiveShadows=!0,e}_createSkirtMesh(t,e){const i=this._createPlaneMesh(1,1,1),s=this._createPlaneMesh(t,1,1),r=this._createPlaneMesh(1,t,1),o=new a.Vector3(e,1,e),n=new a.Vector3(1/t,1,e),l=new a.Vector3(e,1,1/t),h=i.clone();h.scaling.copyFrom(o);const c=s.clone();c.scaling.copyFrom(n),c.position.x=e;const _=i.clone();_.scaling.copyFrom(o),_.position.x=e+1;const m=r.clone();m.scaling.copyFrom(l),m.position.z=e;const p=r.clone();p.scaling.copyFrom(l),p.position.x=e+1,p.position.z=e;const g=i.clone();g.scaling.copyFrom(o),g.position.z=e+1;const M=s.clone();M.scaling.copyFrom(n),M.position.x=e,M.position.z=e+1;const d=i.clone();return d.scaling.copyFrom(o),d.position.x=e+1,d.position.z=e+1,i.dispose(!0,!1),s.dispose(!0,!1),r.dispose(!0,!1),a.Mesh.MergeMeshes([h,c,_,m,p,g,M,d],!0,!0)}_createTrimMesh(t,e){const i=this._createPlaneMesh(t+1,1,e,s.None,1);i.position.set((-t-1)*e,0,-1*e);const r=this._createPlaneMesh(1,t,e,s.None,1);r.position.set(-1*e,0,(-t-1)*e);const o=a.Mesh.MergeMeshes([i,r],!0,!0);return o.rotationQuaternion=new a.Quaternion,o}_createRingMesh(t,e){const i=this._createPlaneMesh(2*t,t-1>>1,e,s.Bottom|s.Right|s.Left),r=this._createPlaneMesh(2*t,t-1>>1,e,s.Top|s.Right|s.Left);r.position.set(0,0,(t+1+(t-1>>1))*e);const o=this._createPlaneMesh(t-1>>1,t+1,e,s.Left);o.position.set(0,0,(t-1>>1)*e);const n=this._createPlaneMesh(t-1>>1,t+1,e,s.Right);return n.position.set((t+1+(t-1>>1))*e,0,(t-1>>1)*e),a.Mesh.MergeMeshes([i,r,o,n],!0,!0)}_createPlaneMesh(t,e,i,r=s.None,o=0){const n=[],l=[],h=[],c=new a.VertexData;c.positions=n,c.indices=l,c.normals=h;for(let a=0;a<e+1;++a)for(let o=0;o<t+1;++o){let l=o,c=a;(0===a&&r&s.Bottom||a===e&&r&s.Top)&&(l&=-2),(0===o&&r&s.Left||o===t&&r&s.Right)&&(c&=-2),n[0+3*o+a*(t+1)*3]=l*i,n[1+3*o+a*(t+1)*3]=0*i,n[2+3*o+a*(t+1)*3]=c*i,h[0+3*o+a*(t+1)*3]=0,h[1+3*o+a*(t+1)*3]=1,h[2+3*o+a*(t+1)*3]=0}let _=0;for(let i=0;i<e;++i)for(let e=0;e<t;++e){const s=e+i*(t+1);(i+e+o)%2==0?(l[_++]=s,l[_++]=s+t+2,l[_++]=s+t+1,l[_++]=s,l[_++]=s+1,l[_++]=s+t+2):(l[_++]=s,l[_++]=s+1,l[_++]=s+t+1,l[_++]=s+1,l[_++]=s+t+2,l[_++]=s+t+1)}const m=new a.Mesh("Clipmap plane",this._scene);return c.applyToMesh(m,!0),m}}}}]);
//# sourceMappingURL=955.ea3f8a5a465243c50d59.js.map